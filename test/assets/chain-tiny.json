{"_id":"chain-tiny","_rev":"21-7edd914256c8a6824368ba0ceb6424fd","name":"chain-tiny","description":"A simple control flow library.","dist-tags":{"latest":"0.2.1"},"versions":{"0.1.0":{"name":"chain-tiny","description":"A simple control flow library.","version":"0.1.0","author":{"name":"Kazuhito Hokamura","email":"k.hokamura@gmail.com"},"repository":{"type":"git","url":"git://github.com/hokaccha/node-chain-tiny.git"},"devDependencies":{"nodeunit":"0.5.x"},"engines":{"node":">= 0.4.0"},"keywords":["flow","async","chain"],"main":"./index","_npmJsonOpts":{"file":"/Users/hokamura/.npm/chain-tiny/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"chain-tiny@0.1.0","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"829d3de63bf28f17e33e8290822397e6baacb7e5","tarball":"http://registry.npmjs.org/chain-tiny/-/chain-tiny-0.1.0.tgz"},"maintainers":[{"name":"hokaccha","email":"k.hokamura@gmail.com"}],"directories":{}},"0.1.1":{"name":"chain-tiny","description":"A simple control flow library.","version":"0.1.1","author":{"name":"Kazuhito Hokamura","email":"k.hokamura@gmail.com"},"repository":{"type":"git","url":"git://github.com/hokaccha/node-chain-tiny.git"},"devDependencies":{"nodeunit":"0.5.x"},"engines":{"node":">= 0.4.0"},"keywords":["flow","async","chain"],"main":"./index","_npmJsonOpts":{"file":"/Users/hokamura/.npm/chain-tiny/0.1.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"chain-tiny@0.1.1","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"5c3c0a36e0d086c7cfafc5acdb475ae6a3881c54","tarball":"http://registry.npmjs.org/chain-tiny/-/chain-tiny-0.1.1.tgz"},"maintainers":[{"name":"hokaccha","email":"k.hokamura@gmail.com"}],"directories":{}},"0.1.2":{"name":"chain-tiny","description":"A simple control flow library.","version":"0.1.2","author":{"name":"Kazuhito Hokamura","email":"k.hokamura@gmail.com"},"repository":{"type":"git","url":"git://github.com/hokaccha/node-chain-tiny.git"},"devDependencies":{"nodeunit":"0.5.x"},"engines":{"node":">= 0.4.0"},"keywords":["flow","async","chain"],"main":"./index","_npmJsonOpts":{"file":"/Users/hokamura/.npm/chain-tiny/0.1.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"chain-tiny@0.1.2","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"808ddbf1e323a7966dd4f3612739a9b2f99335bc","tarball":"http://registry.npmjs.org/chain-tiny/-/chain-tiny-0.1.2.tgz"},"maintainers":[{"name":"hokaccha","email":"k.hokamura@gmail.com"}],"directories":{}},"0.1.3":{"name":"chain-tiny","description":"A simple control flow library.","version":"0.1.3","author":{"name":"Kazuhito Hokamura","email":"k.hokamura@gmail.com"},"repository":{"type":"git","url":"git://github.com/hokaccha/node-chain-tiny.git"},"devDependencies":{"nodeunit":"0.5.x"},"scripts":{"test":"nodeunit test"},"engines":{"node":">= 0.4.0"},"keywords":["flow","async","chain"],"main":"./index","_npmUser":{"name":"hokaccha","email":"k.hokamura@gmail.com"},"_id":"chain-tiny@0.1.3","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.99","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"9acdb6c86498d2637e8e164336f590045dd71cd5","tarball":"http://registry.npmjs.org/chain-tiny/-/chain-tiny-0.1.3.tgz"},"maintainers":[{"name":"hokaccha","email":"k.hokamura@gmail.com"}]},"0.2.0":{"name":"chain-tiny","description":"A simple control flow library.","version":"0.2.0","author":{"name":"Kazuhito Hokamura","email":"k.hokamura@gmail.com"},"repository":{"type":"git","url":"git://github.com/hokaccha/node-chain-tiny.git"},"devDependencies":{"nodeunit":">= 0.6.2"},"scripts":{"test":"nodeunit test"},"engines":{"node":">= 0.4.0"},"keywords":["flow","async","chain"],"main":"./index","_npmUser":{"name":"hokaccha","email":"k.hokamura@gmail.com"},"_id":"chain-tiny@0.2.0","dependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-beta-10","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"4c10eef221875188f49c4ebab17f17add1854a95","tarball":"http://registry.npmjs.org/chain-tiny/-/chain-tiny-0.2.0.tgz"},"readme":"# node-chain-tiny\n\nA simple control flow library.\n\nThe problem which this library solves is the nest and error handling of callback.\n\nFor exsample.\n\n    asyncFunc1(function(err, result1) {\n      if (err) return callback(err);\n      // do something\n      asyncFunc2(function(err, result2) {\n        if (err) return callback(err);\n        // do something\n        asyncFunc3(function(err, result3) {\n          if (err) return callback(err);\n          // do something\n          callback(null, result);\n        });\n      });\n    });\n\nThis code becomes like this by using chain-tiny. \n\n    chain(function(next) {\n      asyncFunc1(next);\n    })\n    .chain(function(result1, next) {\n      // do something\n      asyncFunc2(next);\n    })\n    .chain(function(result2, next) {\n      // do something\n      asyncFunc3(next);\n    })\n    .end(function(err, result3) {\n      // do something\n      callback(err, result);\n    });\n\n## Install\n\n    $ npm install chain-tiny\n\n## Usage\n\n### simple\n\n    var chain = require('chain-tiny');\n\n    chain(function(next) {\n      setTimeout(function() {\n        next(null, 'foo');\n      }, 100);\n    })\n    .chain(function(foo, next) {\n      console.log(foo); // => foo\n      setTimeout(function() {\n        next(null, 'bar', 'baz');\n      }, 1);\n    })\n    .end(function(err, bar, baz) {\n      console.log(bar); // => bar\n      console.log(baz); // => baz\n    });\n\n### error handling\n\n    var chain = require('chain-tiny');\n\n    chain(function(next) {\n      next('Error!');\n    })\n    .chain(function(next) {\n      // not pass here\n      next(null, 'foo');\n    })\n    .end(function(err, foo) {\n      console.log(foo); // => undefined\n      console.log(err); // => Error!\n    });\n\n### parallel\n\n    var chain = require('chain-tiny');\n    var results = [];\n\n    chain.parallel({\n      foo: function(next) {\n        setTimeout(function() {\n          results.push(1);\n          next(null, 1);\n        }, 100);\n      },\n      bar: function(next) {\n        setTimeout(function() {\n          results.push(2);\n          next(null, 2);\n        }, 1)\n      }\n    })\n    .end(function(err, res) {\n      console.log(res); // => { foo: 1, bar: 2 }\n      console.log(results); // => [2, 1]\n    });\n\n#### chain\n\n    var chain = require('chain-tiny');\n    var results = [];\n\n    chain(function(next) {\n      // do something\n      next();\n    })\n    .parallel({\n      foo: function(next) {\n        setTimeout(function() {\n          results.push(1);\n          next(null, 1);\n        }, 100);\n      },\n      bar: function(next) {\n        setTimeout(function() {\n          results.push(2);\n          next(null, 2);\n        }, 1)\n      }\n    })\n    .end(function(err, res) {\n      console.log(res); // => { foo: 1, bar: 2 }\n      console.log(results); // => [2, 1]\n    });\n\n### each\n\n    var chain = require('chain-tiny');\n\n    chain.each({ foo: 'bar', hoge: 'fuga'}, function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => { foo: 'foo:bar', hoge: 'hoge:fuga' }\n    });\n\n#### chain\n\n    var chain = require('chain-tiny');\n\n    chain(function(next) {\n      next(null, { foo: 'bar', hoge: 'fuga'});\n    })\n    .each(function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => { foo: 'foo:bar', hoge: 'hoge:fuga' }\n    });\n\n#### parallel\n\n    var chain = require('chain-tiny');\n\n    chain.eachParallel({ foo: 'bar', hoge: 'fuga'}, function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => { foo: 'foo:bar', hoge: 'hoge:fuga' }\n    });\n\n#### Array\n\n    var chain = require('chain-tiny');\n\n    chain.eachParallel(['foo', 'bar'], function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => [ '0:foo', '1:bar' ]\n    });\n\n### wait\n\n    var chain = require('chain-tiny');\n\n    chain(function(next) {\n      next(null, 'foo', 'bar');\n    })\n    .wait(100) // wait 100ms\n    .chain(function(foo, bar, next) {\n      console.log(foo) // => 'foo'\n      console.log(bar) // => 'bar'\n      next();\n    })\n    .end(function(err) {\n      //...\n    });\n","maintainers":[{"name":"hokaccha","email":"k.hokamura@gmail.com"}]},"0.2.1":{"name":"chain-tiny","description":"A simple control flow library.","version":"0.2.1","author":{"name":"Kazuhito Hokamura","email":"k.hokamura@gmail.com"},"repository":{"type":"git","url":"git://github.com/hokaccha/node-chain-tiny.git"},"devDependencies":{"nodeunit":">= 0.6.2"},"scripts":{"test":"nodeunit test"},"engines":{"node":">= 0.4.0"},"keywords":["flow","async","chain"],"main":"./index","_npmUser":{"name":"hokaccha","email":"k.hokamura@gmail.com"},"_id":"chain-tiny@0.2.1","dependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-beta-10","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"55c04c9a8b6c8eb2290ef3c9cd7b683822732b28","tarball":"http://registry.npmjs.org/chain-tiny/-/chain-tiny-0.2.1.tgz"},"readme":"# node-chain-tiny\n\nA simple control flow library.\n\nThe problem which this library solves is the nest and error handling of callback.\n\nFor exsample.\n\n    asyncFunc1(function(err, result1) {\n      if (err) return callback(err);\n      // do something\n      asyncFunc2(function(err, result2) {\n        if (err) return callback(err);\n        // do something\n        asyncFunc3(function(err, result3) {\n          if (err) return callback(err);\n          // do something\n          callback(null, result);\n        });\n      });\n    });\n\nThis code becomes like this by using chain-tiny. \n\n    chain(function(next) {\n      asyncFunc1(next);\n    })\n    .chain(function(result1, next) {\n      // do something\n      asyncFunc2(next);\n    })\n    .chain(function(result2, next) {\n      // do something\n      asyncFunc3(next);\n    })\n    .end(function(err, result3) {\n      // do something\n      callback(err, result);\n    });\n\n## Install\n\n    $ npm install chain-tiny\n\n## Usage\n\n### simple\n\n    var chain = require('chain-tiny');\n\n    chain(function(next) {\n      setTimeout(function() {\n        next(null, 'foo');\n      }, 100);\n    })\n    .chain(function(foo, next) {\n      console.log(foo); // => foo\n      setTimeout(function() {\n        next(null, 'bar', 'baz');\n      }, 1);\n    })\n    .end(function(err, bar, baz) {\n      console.log(bar); // => bar\n      console.log(baz); // => baz\n    });\n\n### error handling\n\n    var chain = require('chain-tiny');\n\n    chain(function(next) {\n      next('Error!');\n    })\n    .chain(function(next) {\n      // not pass here\n      next(null, 'foo');\n    })\n    .end(function(err, foo) {\n      console.log(foo); // => undefined\n      console.log(err); // => Error!\n    });\n\n### parallel\n\n    var chain = require('chain-tiny');\n    var results = [];\n\n    chain.parallel({\n      foo: function(next) {\n        setTimeout(function() {\n          results.push(1);\n          next(null, 1);\n        }, 100);\n      },\n      bar: function(next) {\n        setTimeout(function() {\n          results.push(2);\n          next(null, 2);\n        }, 1)\n      }\n    })\n    .end(function(err, res) {\n      console.log(res); // => { foo: 1, bar: 2 }\n      console.log(results); // => [2, 1]\n    });\n\nchain:\n\n    var chain = require('chain-tiny');\n    var results = [];\n\n    chain(function(next) {\n      // do something\n      next();\n    })\n    .parallel({\n      foo: function(next) {\n        setTimeout(function() {\n          results.push(1);\n          next(null, 1);\n        }, 100);\n      },\n      bar: function(next) {\n        setTimeout(function() {\n          results.push(2);\n          next(null, 2);\n        }, 1)\n      }\n    })\n    .end(function(err, res) {\n      console.log(res); // => { foo: 1, bar: 2 }\n      console.log(results); // => [2, 1]\n    });\n\n### each\n\n    var chain = require('chain-tiny');\n\n    chain.each({ foo: 'bar', hoge: 'fuga'}, function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => { foo: 'foo:bar', hoge: 'hoge:fuga' }\n    });\n\nchain:\n\n    var chain = require('chain-tiny');\n\n    chain(function(next) {\n      next(null, { foo: 'bar', hoge: 'fuga'});\n    })\n    .each(function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => { foo: 'foo:bar', hoge: 'hoge:fuga' }\n    });\n\nparallel:\n\n    var chain = require('chain-tiny');\n\n    chain.eachParallel({ foo: 'bar', hoge: 'fuga'}, function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => { foo: 'foo:bar', hoge: 'hoge:fuga' }\n    });\n\nArray:\n\n    var chain = require('chain-tiny');\n\n    chain.eachParallel(['foo', 'bar'], function(key, val, next) {\n      setTimeout(function() {\n        next(null, key + ':' + val);\n      }, 1);\n    })\n    .end(function(err, results) { // or .chain(results, next)\n      console.log(results); // => [ '0:foo', '1:bar' ]\n    });\n","maintainers":[{"name":"hokaccha","email":"k.hokamura@gmail.com"}]}},"maintainers":[{"name":"hokaccha","email":"k.hokamura@gmail.com"}],"time":{"modified":"2012-03-17T14:22:09.437Z","created":"2011-10-10T06:56:02.275Z","0.1.0":"2011-10-10T06:56:04.634Z","0.1.1":"2011-10-10T08:00:12.985Z","0.1.2":"2011-10-17T03:20:47.837Z","0.1.3":"2011-11-10T06:02:55.694Z","0.2.0":"2012-03-17T12:54:33.008Z","0.2.1":"2012-03-17T14:22:09.437Z"},"author":{"name":"Kazuhito Hokamura","email":"k.hokamura@gmail.com"},"repository":{"type":"git","url":"git://github.com/hokaccha/node-chain-tiny.git"},"_attachments":{"chain-tiny-0.2.1.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-Mz/U08zeTCUYNNYsq53J+A==","length":4253,"stub":true},"chain-tiny-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-Y70N/oCXgNB7xPJi1aUbRA==","length":4443,"stub":true},"chain-tiny-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-gguQ78fzd2vZDMvWYGJmAQ==","length":10240,"stub":true},"chain-tiny-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-kaX/7+0tYtiwfSvLlC7cjQ==","length":3588,"stub":true},"chain-tiny-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-LMvKQSXR0qbu0ghbilaphg==","length":2999,"stub":true},"chain-tiny-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-k6IVVfAy9EVettOcyGM36A==","length":2941,"stub":true}}}
