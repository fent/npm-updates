{"_id":"newsemitter","_rev":"5-aca7782ab6beeaef30c36b888f817d2e","name":"newsemitter","description":"An event emitter that emits only new events.","dist-tags":{"latest":"0.1.0"},"versions":{"0.1.0":{"name":"newsemitter","description":"An event emitter that emits only new events.","keywords":["event","emitter","event emitter","publish","subscribe","pubsub"],"version":"0.1.0","repository":{"type":"git","url":"git://github.com/fent/node-newsemitter.git"},"author":{"name":"fent","url":"https://github.com/fent"},"main":"./lib/index.js","scripts":{"test":"mocha -R spec test/*-test.js"},"directories":{"lib":"./lib"},"engines":{"node":"*"},"devDependencies":{"mocha":"0.x.x"},"licenses":[{"type":"MIT","url":"http://github.com/fent/node-newsemitter.js/raw/master/LICENSE"}],"_npmUser":{"name":"neat","email":"fent@gmail.com"},"_id":"newsemitter@0.1.0","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.4","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"7635ce6ce4dc226e13bdfb3ff20975538c01e8f4","tarball":"http://registry.npmjs.org/newsemitter/-/newsemitter-0.1.0.tgz"},"maintainers":[{"name":"neat","email":"fent@gmail.com"}]}},"readme":"# node-newsemitter [![Build Status](https://secure.travis-ci.org/fent/node-newsemitter.png)](http://travis-ci.org/fent/node-newsemitter)\n\nAn event emitter that emits only new events. Because sometimes we don't care about old events.\n\n\n# Usage\n\n```js\nvar NewsEmitter = require('newsemitter');\nvar news = new NewsEmitter();\n\nnews.on('item', function(item) {\n  console.log('new item:', item.title);\n});\n\nnews.emit('item', { title: 'hello there' });\nnews.emit('item', { title: 'hello world' });\nnews.emit('item', { title: 'hello there' });\nnews.emit('item', { title: 'hey' });\nnews.emit('item', { title: 'hey' });\nnews.emit('item', { title: 'hey' });\n\n// new item: hello there\n// new item: hello world\n// new item: hey\n```\n\n# API\n### new NewsEmitter([options])\n\nCreates an instance of a NewsEmitter. `options` can be\n\n* `filter` - An array of events that will be affected. If not given, events names will not be filtered.\n* 'ignore' - An array of events that will be ignored. Defaults to `['newListener']`.\n* `maxHistory` - Maximum number of history items to remember. Default is `10`.\n* `manageHistory` - If true, does not add emitted events to history. Instead expects you to manually manage history with `addHistory()`. Defaults to `false`.\n* `comparator` - Function used to compare one event to another. Takes 2 arguments, first is possibly new arguments item, and second is item from history. Default is a deep equal function.\n\n### NewsEmitter#emit(event)\n\nEmits an event, only if it has not been emitted before. Returns true if item is new and emtted. False otherwise.\n\n### NewsEmitter#reset([event])\n\nResets history of an event. If no event given, resets all history.\n\n### NewsEmitter#addHistory(event, arr)\n\nAdds items in `arr` as `event`'s history. Truncated as necessary based on max history length considering the last item in the array as newest.\n\n\n# Install\n\n    npm install newsemitter\n\n\n# Tests\nTests are written with [mocha](http://visionmedia.github.com/mocha/)\n\n```bash\nnpm test\n```\n\n# License\nMIT\n","maintainers":[{"name":"neat","email":"fent@gmail.com"}],"time":{"modified":"2012-03-13T13:09:54.343Z","created":"2012-03-12T15:47:45.461Z","0.1.0":"2012-03-12T15:47:47.884Z","0.1.1":"2012-03-13T13:09:54.343Z"},"author":{"name":"fent","url":"https://github.com/fent"},"repository":{"type":"git","url":"git://github.com/fent/node-newsemitter.git"},"_attachments":{"newsemitter-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-bbKllrBxUWIfu728oaozVA==","length":4062,"stub":true},"newsemitter-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-QBHOio7WMuZiH9c3J+uMBQ==","length":4024,"stub":true}}}
